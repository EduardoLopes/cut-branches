name: 'Node Setup'
description: 'Setup Node.js environment'

runs:
  using: 'composite'
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'

    - name: Enable corepack
      run: corepack enable
      shell: bash

    - name: Get pnpm store directory
      id: pnpm-cache-dir
      run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Clean cache directories
      if: runner.os == 'Windows'
      run: |
        if (Test-Path ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }}) { Remove-Item -Recurse -Force ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }} }
        if (Test-Path "**/node_modules") { Remove-Item -Recurse -Force "**/node_modules" }
      shell: pwsh

    - name: Configure pnpm for Windows
      if: runner.os == 'Windows'
      run: |
        pnpm config set enable-pre-post-scripts true
        pnpm config set node-linker hoisted
      shell: pwsh

    - uses: actions/cache@v4
      name: Setup pnpm store cache
      with:
        path: ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - uses: actions/cache@v4
      name: Cache node_modules
      if: runner.os != 'Windows'
      with:
        path: |
          **/node_modules
          !**/node_modules/.cache
        key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-modules-

    - name: Install Dependencies
      if: runner.os != 'Windows'
      run: pnpm install --frozen-lockfile
      shell: bash

    - name: Install Dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        pnpm install --frozen-lockfile
      shell: pwsh
